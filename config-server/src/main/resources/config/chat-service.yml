CHAT_NODE_ID: chat-messages-group1 # 컨테이너/vm마다 고유값 주입
ONLINE_KEY_PREFIX: 'socket:online:1:'
OUTBOX_KAFKA_TOPIC: 'cdc.chatdb.outbox'
OUTBOX_GROUP_ID: 'chat-outbox-consumers'

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3307/chatdb
    username: guest
    password: guest

  data:
    redis:
      host: localhost # redis_container
      port: 6380

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    show-sql: true
    hibernate:
      ddl-auto: update

    # Kafka ?? ??
    kafka:
      bootstrap-servers: localhost:10000,localhost:10001,localhost:10002 # ??? ?? ??
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      consumer:
        group-id: chat-messages-group
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        properties:
          spring.json.trusted.packages: com.nicehcy.chatservice.dto
          spring.json.value.default.type: com.nicehcy.chatservice.dto.MessageDto

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

server:
  port: 8080